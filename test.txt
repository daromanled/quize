* 1. Что такое Zen of Python?
    \Документация стандартных библиотек Python.
    \Свод настоятельных рекомендаций по стилю программирования для python-разработчиков.
    \Философия программирования на Python. - ВЕРНО
* 2. Каким количеством отступов (пробелов) разделяют блоки кода?
    \2/
    \6/
    \4/ - ВЕРНО
    \5/
    \1/
    \3/
* 3. Рекомендованная максимальная длина строки кода:
    \100 или 160 символов/
    \30 или 80 символов/
    \50 или 100 символов/
    \80 или 120 символов/ - ВЕРНО
* 4. Выберите варианты БЕЗ ошибок в имени(-ах) объектов:
    \NAMEONE = 'Robin'/ - если константа, то верно
    \def GREATONE:/
    \class My_super_class:/
    \x = y + z/ - ВЕРНО
    \class mySuperClass:/
    \def GreatOne:/
    \def great_one:/ - ВЕРНО
    \class MySuperClass:/ - ВЕРНО
5. Вам представлены куски кода, выберите варианты БЕЗ стилистических ошибок:
    \a = (1,2,3,4,5)/
    \if 123=45 or 'ben' in kings:/
    \x, y = (25, 45)/ - ВЕРНО
    \foo = {'A':56, 'B':77}/ - ВЕРНО
    \def goo(param, x=0):/ - ВЕРНО
    \my_dict = {'Great'  :'Ben', 'Small  :'None'}/
    \hello = [34, 55, 67]/ - ВЕРНО
* 6. Вам представлены куски кода, выберите варианты БЕЗ стилистических ошибок:
    \def foo(param1, param2,
                  name, text):/ - ВЕРНО
                  
    \a = (1 + 2 + 3 + 4 + 5
            + 6 + 7 + 8 + 9 + 10)/ - ВЕРНО
            
    \a = (1, 2, 3, 4, 5,
    6, 7, 8, 9, 10)/
    
    \ALL = (
        'Boris', 'Anna',
        'Lena', 'Ron',
    )/
    
    \b = [5, 4, 3,
            2, 1, 0]/ - ВЕРНО
            
    \"""One, Two, Three,
    Four, Five, Six
    """/
    
    \class A:
        def _example1:
            pass

        def __example2:
            pass/
            
    \def boo(high,
    low, mid):/
    
* 7. Выберите варианты, где print(foo) вернет True (где foo == True).
    \a = [""]
    foo = bool(a) - ВЕРНО
    print(foo)/
    
    \a = dict()
    foo = bool(a)
    print(foo)/
    
    \a = 1,
    foo = isinstance(a, int)
    print(foo)/
    
    \a = 3,
    foo = isinstance(a, tuple) - ВЕРНО
    print(foo)/
    
    \a = None
    foo = bool(a)
    print(foo)/
    
    \a = (None,)
    foo = bool(a) - ВЕРНО
    print(foo)/
    
    \a = ""
    foo = bool(a)
    print(foo)/
    
    \a = 0.0
    foo = bool(a)
    print(foo)/
    
    \a = "  "
    foo = bool(a) - ВЕРНО
    print(foo)/
    * 8. Вам представлены куски кода, выберите варианты БЕЗ стилистических ошибок:
    \def foo(x, y):
        pass
    my_function()
    text = foo(x, y);  name = foo(t, r); label = foo(d, c)/
    
    \if True: name = 'Jack'; my_function(); c = 1 + 4/
    
    \if True: continue 
    my_function()/ 
    
    \def foo(x, y):
        pass

    my_function()
    text = foo(x, y)/ - ВЕРНО
    
    \if number != 22:
        break
    my_function()/ - ВЕРНО
* 9. Какие задачи решают docstrings?
    \Как использовать данный кусок кода; описание параметров (для функции); возвращаемые значения (для функции); возвращаемые исключения (функции). Пишется для пользователя. - ВЕРНО
    \Хранит ссылку на репозиторий в github.
    \Рациональное объяснение данного куска кода; как работает эта часть кода; что еще стоит дописать или улучшить на этом участке кода. Пишутся для разработчиков. 
    \Хранит информацию о разработчике и ссылка на его фотографию.
* 10. Задача: необходимо получить list из кубов всех чисел, делящихся и на 3, и на 4 без остатка, взятых из массива чисел mass.
Использовать List Comprehensions.
В ответе написать код - одна строчка.

Пример ответа:
[x for x in mass] 
Ответ: [x ** 3 for x in mass if x % 3 == 0 and x % 4 == 0]
